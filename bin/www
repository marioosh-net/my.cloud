#!/usr/bin/env node
var debug = require('debug')('websafe');
var app = require('../app');
var bodyParser = require('body-parser');
var config = require('../config.js');
const fs = require('fs');
var log4js = require('log4js');
var logger = log4js.getLogger();

app.use(bodyParser.json()); // for parsing application/json
app.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded

app.set('port', process.env.PORT || 3000);

var listenCallback = function() {
  debug('Express server listening on port ' + server.address().port);
  
  var io = require('socket.io').listen(server);
	io.configure('development', function(){
		io.set('transports', ['xhr-polling']);
		io.disable('log');
	});

  app.set('io',io);
  debug('Socket IO On');
  io.sockets.on('connection', function (socket) {
	  socket.on('disconnect', function () {
	    io.sockets.emit('user disconnected');
	  });
  });

};

try {
	// try ssl
	const options = {
	  key: fs.readFileSync(config.tls.key),
	  cert: fs.readFileSync(config.tls.cert)
	};
	var server = require('https').createServer(options, app).listen(app.get('port'), listenCallback);
} catch (err)  {
	logger.error(err);
	// fallback no ssl
	var server = app.listen(app.get('port'), listenCallback);
}